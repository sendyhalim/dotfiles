###########################################################################
# General options
###########################################################################
bind R source-file ~/.tmux.conf

# Pass through xterm keys
set -g xterm-keys on

# Ring the bell if any background window rang a bell
set -g bell-action any
set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g default-terminal "screen-256color"
set -s escape-time 0

###########################################################################
# Window management / navigation
###########################################################################
# Use vi mode
set-window-option -g mode-keys vi

# Move between windows
bind-key C-h previous-window
bind-key C-l next-window

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

###########################################################################
# Pane management / navigation
###########################################################################

# Horizontal splits with s or C-s
unbind s
unbind C-s
bind-key s split-window
bind-key C-s split-window

# Vertical split with v or C-v
unbind v
unbind C-v
bind-key v split-window -h
bind-key C-v split-window -h

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim|nvim?|emacs?)(diff)?$"'
bind -n C-w-h if-shell "$is_vim" "send-keys C-w-h" "select-pane -L"
bind -n C-w-j if-shell "$is_vim" "send-keys C-w-j" "select-pane -D"
bind -n C-w-k if-shell "$is_vim" "send-keys C-w-k" "select-pane -U"
bind -n C-w-l if-shell "$is_vim" "send-keys C-w-l" "select-pane -R"
bind -n C-w-\ if-shell "$is_vim" "send-keys C-w-\\" "select-pane -l"

# C-g C-k to passthrough a C-k
# C-k is consumed for pane navigation but we want it for kill-to-eol
unbind C-k
bind C-k send-key C-k

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Note on a few prefix options: C-a = 0x01, C-b = 0x02, C-g = 0x06
bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

###########################################################################
# Scrollback / pastebuffer
###########################################################################
# Install plugin reattach-to-user-namespace -> brew install reattach-to-user-namespace

# Set history limit
set-option -g history-limit 6000

# Vim-style copy/paste
unbind [
bind y copy-mode
unbind p
bind p paste-buffer
# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

###########################################################################
# Mouse mode
###########################################################################
set -g mouse on
bind-key -t vi-copy WheelUpPane scroll-up
bind-key -t vi-copy WheelDownPane scroll-down

# Toggle mouse on
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

###########################################################################
# Status Bar
###########################################################################
# Show host name and IP address on left side of status bar
set -g status-left-length 70
set -g status-left "ðŸ–¥  #[fg=white]#h #[fg=colour149] ðŸ“¡  #[fg=white]#(curl icanhazip.com) #[fg=white]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

# Show session name, window & pane number, date and time on right side of status bar
set -g status-right-length 60
set -g status-right "ðŸ—“  #[fg=white]%d %b %Y #[fg=colour149] ðŸ•’  #[fg=white]%l:%M %p #[fg=colour149]â€¢ #[fg=white]#(date -u | awk '{print $4}') UTC"


###########################################################################
# Color scheme (Solarized Dark)

# Default statusbar colors
set-option -g status-bg colour235
set-option -g status-fg white
set-option -g status-attr default

# Default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# Window tab title format
set -g window-status-format " #I:#W "
set -g window-status-current-format " #I:#W "

# Tab window title colors
set-window-option -g window-status-fg colour243
set-window-option -g window-status-bg colour236
set-window-option -g window-status-current-fg colour255

# Pane border
set-option -g pane-border-fg white
set-option -g pane-active-border-fg colour24

# Message text
set-option -g message-bg colour237
set-option -g message-fg white

# Pane number display
set-option -g display-panes-active-colour colour76
set-option -g display-panes-colour white

# Clock
set-window-option -g clock-mode-colour cyan

# Smart pane switching with awareness of vim splits
bind -n C-k run-shell 'tmux-vim-select-pane -U'
bind -n C-j run-shell 'tmux-vim-select-pane -D'
bind -n C-h run-shell 'tmux-vim-select-pane -L'
bind -n C-l run-shell 'tmux-vim-select-pane -R'
bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'

# Tmux plugins
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
run '~/.tmux/plugins/tpm/tpm'
