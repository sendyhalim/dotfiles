# Pane management / navigation
# --------------------------------------------
# Horizontal splits with s or C-s
unbind s
unbind C-s
bind-key s split-window
bind-key C-s split-window

# Vertical split with v or C-v
unbind v
unbind C-v
bind-key v split-window -h
bind-key C-v split-window -h

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim|nvim?|emacs?)(diff)?$"'
bind -n C-w-h if-shell "$is_vim" "send-keys C-w-h" "select-pane -L"
bind -n C-w-j if-shell "$is_vim" "send-keys C-w-j" "select-pane -D"
bind -n C-w-k if-shell "$is_vim" "send-keys C-w-k" "select-pane -U"
bind -n C-w-l if-shell "$is_vim" "send-keys C-w-l" "select-pane -R"
bind -n C-w-\ if-shell "$is_vim" "send-keys C-w-\\" "select-pane -l"

# C-g C-k to passthrough a C-k
# C-k is consumed for pane navigation but we want it for kill-to-eol
unbind C-k
bind C-k send-key C-k

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Note on a few prefix options: C-a = 0x01, C-b = 0x02, C-g = 0x06
bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

# Smart pane switching with awareness of vim splits
bind -n C-k run-shell 'tmux-vim-select-pane -U'
bind -n C-j run-shell 'tmux-vim-select-pane -D'
bind -n C-h run-shell 'tmux-vim-select-pane -L'
bind -n C-l run-shell 'tmux-vim-select-pane -R'
bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'
